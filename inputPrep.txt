
00100000000010000000000000001010001000000000001000000000000000010000000000001000001000000010000000000000000000000000000000001100001000010000100011111111111111110001010000001000111111111000000000100000000000100000000000000100001001000000010000000001011000000000000000000000000000000000110000100000000000100000000000001010000000000000000000000000000011000110000101100010011000110110010000001010010000010100001001000011010001000111011101100001011001000111011101100001011001000000000010101010101010101010101010

OTHER TEST:
main:
0	addi $t0, $zero, 10 0b00100000000010000000000000001010
Loop:
1	addi $v0, $zero, 1 0b00100000000000100000000000000001
2	add $a0, $zero, $t0 0b00000000000010000010000000100000
3	syscall 0b00000000000000000000000000001100
4	addi $t0, $t0, -1 0b00100001000010001111111111111111
5	bne $t0, $zero, Loop 0b00010100000010000000000000100000 0b00010100000010001111111110000000
6	addi $v0, $zero, 4 0b00100000000000100000000000000100
7	addiu $a0, $zero, cout 0b00100100000001000000000101100000
8	syscall 0b00000000000000000000000000001100
9	addi $v0, $zero, 10 0b00100000000000100000000000001010
10	syscall 0b00000000000000000000000000001100
STRING:
11	cout:  .asciiz "abcd\nABCDwadwad"




OTHER TEST+
main:
0	addiu $t0, $zero, 320 0b00100100000010000000000101000000
1	addi $t1, $zero, 7 0b00100000000010010000000000000111
Loop:
2	addi $v0, $zero, 1 0b00100000000000100000000000000001
3	lw $a0, 0($t0) 0b10001101000001000000000000000000
4	syscall 0b00000000000000000000000000001100
5	addi $t1, $t1, -1 0b00100001001010011111111111111111
6	addi $t0, $t0, 32 0b00100001000010000000000000100000
7	bne $t1, $zero, Loop 0b00010100000010011111111101100000
8	addi $v0, $zero, 10 0b00100000000000100000000000001010
9	syscall 0b00000000000000000000000000001100
ARRAY:
10	.word 3 1 4 1 5 9
00000000000000000000000000000011
00000000000000000000000000000001
00000000000000000000000000000100
00000000000000000000000000000001
00000000000000000000000000000101
00000000000000000000000000001001



OTHER TEST++
main:
0	addiu $a0, $zero, PROMPT 0b00100100000001000000001000100000
1	addi $v0, $zero, 4 0b00100000000000100000000000000100
2	syscall 0b00000000000000000000000000001100
3	addi $v0, $zero, 5 0b00100000000000100000000000000101
4	syscall 0b00000000000000000000000000001100
5	addi $a0, $a0, 1 0b00100000100001000000000000000001
6	add $a1, $a0, $zero 0b00000000100000000010100000100000
7	addiu $a0, $zero, BUFFER 0b00100100000001000000001111101000
8	addi $v0, $zero, 8 0b00100000000000100000000000001000
9	syscall 0b00000000000000000000000000001100
10	addiu $a0, $zero, TYPED 0b00100100000001000000010101110000
11	addi $v0, $zero, 4 0b00100000000000100000000000000100
12	syscall 0b00000000000000000000000000001100
13	addiu $a0, $zero, BUFFER 0b00100000000001000000001111101000
14	syscall 0b00000000000000000000000000001100
15	addi $v0, $zero, 10 0b00100000000000100000000000001010
16	syscall 0b00000000000000000000000000001100
PROMPT (544):
17	.asciiz "type in the number of characters (less than 49 please)\n"
0111010001111001011100000110010100100000011010010110111000100000011101000110100001100101001000000110111001110101011011010110001001100101011100100010000001101111011001100010000001100011011010000110000101110010011000010110001101110100011001010111001001110011001000000010100001101100011001010111001101110011001000000111010001101000011000010110111000100000001101000011100100100000011100000110110001100101011000010111001101100101001010010000101000000000
BUFFER (1000):
17+57*8	idk whatever the thing is for buffers
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
TYPED (1392):
17+106*8	.asciiz "your typed string is:\n"
0111100101101111011101010111001000100000011101000111100101110000011001010110010000100000011100110111010001110010011010010110111001100111001000000110100101110011001110100000101000000000



0010000000000010000000000000000100100000000001000000000000000011001000000000100000000000000011000000000100000100001000000010010100000000000000000000000000001100001101001000010000000000000001010000000000000000000000000000110000110100100001000000000000010000000000000000000000000000000011000000000010001000001000000010010000000000000000000000000000001100001000000000100100000000000001100000000010001001001000000010011000000000000000000000000000001100000000001000100000100000001001110000000000000000000000000000110000000000100010000010000000100010000000000000000000000000000011000000000100000100001000000010001000000000000000000000000000001100

OTHER TEST+++
main:
	addi $v0, $zero, 1 0b00100000000000100000000000000001
	addi $a0, $zero, 3 0b00100000000001000000000000000011
	addi $t0, $zero, 12 0b00100000000010000000000000001100
	or $a0, $t0, $a0 0b00000001000001000010000000100101
	syscall 0b00000000000000000000000000001100
	ori $a0, $a0, 5 0b00110100100001000000000000000101
	syscall 0b00000000000000000000000000001100
	ori $a0, $a0, 16 0b00110100100001000000000000010000
	syscall 0b00000000000000000000000000001100
	and $a0, $a0, $t0 0b00000000100010000010000000100100
	syscall 0b00000000000000000000000000001100
	addi $t1, $zero, 6 0b00100000000010010000000000000110
	xor $a0, $a0, $t1 0b00000000100010010010000000100110
	syscall 0b00000000000000000000000000001100
	nor $a0, $a0, $t0 0b00000000100010000010000000100111
	syscall 0b00000000000000000000000000001100
	sub $a0, $a0, $t0 0b00000000100010000010000000100010
	syscall 0b00000000000000000000000000001100
	sub $a0, $t0, $a0 0b00000001000001000010000000100010
	syscall 0b00000000000000000000000000001100







OTHERTEST++++
main:
0	addi $t0, $zero, 3 0b00100000000010000000000000000011
1	addi $t1, $zero, -2 0b00100000000010011111111111111110
2	addi $v0, $zero, 1 0b00100000000000100000000000000001
3	slt $a0, $t1, $t0 0b00000001001010000010000000101010
4	syscall 0b00000000000000000000000000001100
5	mult $t0, $t1 0b00000001000010010000000000011000
6	mflo $t0 0b0000000000000000 01000 00000 010010
7	slt $a0, $t1, $t0 0b00000001001010000010000000101010
8	syscall 0b00000000000000000000000000001100
9	addi $a0, $zero, 6 0b00100000000001000000000000000110
10	div $t0, $a0 0b0000000100000100000000000011010
11	mflo $a0 0b00000000000000000010000000010010
12	syscall 0b00000000000000000000000000001100
13	mfhi $a0 0b00000000000000000010000000010000
14	syscall 0b00000000000000000000000000001100
15	addi $t0, $zero, 17 0b00100000000010000000000000010001
16	addi $t1, $zero, 5 0b00100000000010010000000000000101
17	div $t0, $t1 0b0000000100001001000000000011010
18	mflo $a0 0b000000000000000000100010010
19	syscall 0b00000000000000000000000000001100
20	mfhi $a0 0b00000000000000000010000000010000
21	syscall 0b00000000000000000000000000001100
22	addi $v0, $zero, 10 0b00100000000000100000000000001010
23	syscall 0b00000000000000000000000000001100